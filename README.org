* Binary5 keyboard
** objective
Developing 5-bit binary input keyboard, which works only by a left hand for text input.

** proof of concept
+ create a key code table for 5-bit input
+ develop a prototype model
+ develop a simple training software
+ train myself
+ check if I can reach practically usable speed to input text
+ If no, the project ends.  If yes, continue to create a model for my daily use.

** linux uhid keyboard
$ cd THIS_PROGRAM_DIRECTORY
$ ./uhidbin5.py

It prints the key code table, and then the 5-bit binary keyboard works as a
regular keyboard.
When a modifier key is hit, the modifier key status is printed at the bottom line.

** configuration table
The keycode configuration is in 'config.org' file.
There are two sets of configurations:'A' and 'B'.
'SWTB' switches between the two sets.
To change the configurations, edit this file.

** practice program
$ ./bkbpractice.py
This uses 'xviewer' as an external png file viewer.
A left hand graphic appear with a character, you hit the 5-bit binary keyboard to
input the indicated character.  If you hit the right code, it goes the next character.
If it is a wrong answer, it shows the right position of fingers on the graphic.

To practice limited characters, use '-s' option.
E.G. to practice five letters of 'abcde',
$ ./bkbpractice.py -s abcde
OR
$ ./bkbpractice.py -s a..e

** License
Unless otherwise explicitly stated,
all files in this project are released under GNU General Public License Version 2.

** development history
*** 2023-12-29
After all, the touch pad doesn't work well.
It is difficult to avoid inadvertent touching.
I made a new keyboard with 'Cherry MX SILENT RED'.
"uhidbin5.py" works with the key switch as default.
"uhidbin5.py touchpad" works with the touchpad.
#+ATTR_LATEX: :width 200px
#+ATTR_HTML: :width 200px
#+CAPTION: mechanical key swtich board
[[./photos/keysw_cherry_red.jpg]]

Added a function to select a configuration from 2 configuration tables.
For emacs users, typing on a software other than emacs is always problematic.
E.g. 'C-f' is assigned as 'RIGHT' in the 2nd set.

*** 2023-12-4
It was difficult to input some codes which needs to lift the third finger.
So, made the third finger pad a little down as the next,
#+ATTR_LATEX: :width 200px
#+ATTR_HTML: :width 200px
#+CAPTION: surface down for the third finger
[[./photos/fingers_on_board2.jpg]]

*** 2023-11
Create a key code table
+ 5 bits can make 32 codes.
+ 00000 is delimiter.
+ 00001,00010,00100,01000,10000 are modifier.
+ 26 codes are left, and it is just enough for 26 alphabet characters.
+ Do a little research about the frequency of the letters.

Develop a prototype model
5-bit touch key input.

Use adafruit FT232H(i2c) board + AT42QT1070(touch sensor) board

AT42QT1070 board needs a little modification to use i2c mode.
#+ATTR_LATEX: :width 200px
#+ATTR_HTML: :width 200px
#+CAPTION: surface side of FT232H + AT42QT1070
[[./photos/ft232h_at42qt1070.jpg]]
#+ATTR_LATEX: :width 200px
#+ATTR_HTML: :width 200px
#+CAPTION: back side of FT232H + AT42QT1070
[[./photos/ft232h_at42qt1070_wiring.jpg]]

At first create the touch pad as the next pictures,
#+ATTR_LATEX: :width 200px
#+ATTR_HTML: :width 200px
#+CAPTION: surface side of the touchpad(tied cable)
[[./photos/touchkey1_surface.jpg]]
#+ATTR_LATEX: :width 200px
#+ATTR_HTML: :width 200px
#+CAPTION: back side of the touchpad(tied cable)
[[./photos/touchkey1_back.jpg]]

It suffered a lot with cross talk noise.
So, modified as the next,
#+ATTR_LATEX: :width 200px
#+ATTR_HTML: :width 200px
#+CAPTION: surface side of the touchpad(separated cable)
[[./photos/touchkey2_back.jpg]]

Started my training,
#+ATTR_LATEX: :width 200px
#+ATTR_HTML: :width 200px
#+CAPTION: surface side of the touchpad(tied cable)
[[./photos/fingers_on_board1.jpg]]

#+OPTIONS: \n:t ^:nil
